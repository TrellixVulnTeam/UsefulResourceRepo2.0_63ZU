Error ---------------------------------------------------------------------------------------------------- test.js:23:32

Cannot assign `this.#foo(...)` to `fooInvalid` because number [1] is incompatible with string [2]. [incompatible-type]

   test.js:23:32
   23|     const fooInvalid: string = this.#foo(""); // Error: type mismatch
                                      ^^^^^^^^^^^^^

References:
   test.js:13:20
   13|   #foo(a: number): number { return a; }
                          ^^^^^^ [1]
   test.js:23:23
   23|     const fooInvalid: string = this.#foo(""); // Error: type mismatch
                             ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:23:42

Cannot call `this.#foo` with empty string bound to `a` because string [1] is incompatible with number [2].
[incompatible-call]

   test.js:23:42
   23|     const fooInvalid: string = this.#foo(""); // Error: type mismatch
                                                ^^ [1]

References:
   test.js:13:11
   13|   #foo(a: number): number { return a; }
                 ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:26:32

Cannot assign `CanCallPrivateMethods.#bar(...)` to `barInvalid` because string [1] is incompatible with number [2].
[incompatible-type]

   test.js:26:32
   26|     const barInvalid: number = CanCallPrivateMethods.#bar(3); // Error: type mismatch
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   test.js:14:27
   14|   static #bar(b: string): string { return b; }
                                 ^^^^^^ [1]
   test.js:26:23
   26|     const barInvalid: number = CanCallPrivateMethods.#bar(3); // Error: type mismatch
                             ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:26:59

Cannot call `CanCallPrivateMethods.#bar` with `3` bound to `b` because number [1] is incompatible with string [2].
[incompatible-call]

   test.js:26:59
   26|     const barInvalid: number = CanCallPrivateMethods.#bar(3); // Error: type mismatch
                                                                 ^ [1]

References:
   test.js:14:18
   14|   static #bar(b: string): string { return b; }
                        ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:28:18

Cannot call `invalidOther.#foo` because property `#foo` is missing in `CanDefinePrivateMethod` [1]. [prop-missing]

   test.js:28:18
   28|     invalidOther.#foo(3); // Error: missing prop #foo
                        ^^^^

References:
   test.js:19:19
   19|     invalidOther: CanDefinePrivateMethod,
                         ^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:47:14

Cannot call `this.#bar` because property `#bar` is missing in `Inner` [1]. [prop-missing]

   test.js:47:14
   47|         this.#bar(); // Error: bar not callable in inner
                    ^^^^

References:
   test.js:42:11
   42|     class Inner {
                 ^^^^^ [1]


Error ----------------------------------------------------------------------------------------------------- test.js:59:5

Cannot get `this.#foo` because property `#foo` [1] cannot be unbound from the context [2] where it was defined.
[method-unbinding]

   test.js:59:5
   59|     this.#foo;
           ^^^^^^^^^ [1]

References:
   test.js:54:3
   54|   #foo(): number { return 3; }
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:60:5

Cannot get `PrivateMethodUnbound.#bar` because property `#bar` [1] cannot be unbound from the context [2] where it was
defined. [method-unbinding]

   test.js:60:5
   60|     PrivateMethodUnbound.#bar;
           ^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:55:3
   55|   static #bar(): string { return 'bar'; }
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]



Found 8 errors
