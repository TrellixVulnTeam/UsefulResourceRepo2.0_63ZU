dict(5) {
  ["haystack"]=>
  string(3) "abc"
  ["replacements"]=>
  dict(1) {
    ["a"]=>
    string(2) "r1"
  }
  ["C"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(4) "r1bc"
    ["replace_every_nonrecursive_l()"]=>
    string(4) "r1bc"
    ["replace_every_ci_l()"]=>
    string(4) "r1bc"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(4) "r1bc"
  }
  ["en_US.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(4) "r1bc"
    ["replace_every_nonrecursive_l()"]=>
    string(4) "r1bc"
    ["replace_every_ci_l()"]=>
    string(4) "r1bc"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(4) "r1bc"
  }
  ["tr_TR.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(4) "r1bc"
    ["replace_every_nonrecursive_l()"]=>
    string(4) "r1bc"
    ["replace_every_ci_l()"]=>
    string(4) "r1bc"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(4) "r1bc"
  }
}
dict(5) {
  ["haystack"]=>
  string(3) "Abc"
  ["replacements"]=>
  dict(1) {
    ["a"]=>
    string(2) "r1"
  }
  ["C"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "Abc"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "Abc"
    ["replace_every_ci_l()"]=>
    string(4) "r1bc"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(4) "r1bc"
  }
  ["en_US.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "Abc"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "Abc"
    ["replace_every_ci_l()"]=>
    string(4) "r1bc"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(4) "r1bc"
  }
  ["tr_TR.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "Abc"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "Abc"
    ["replace_every_ci_l()"]=>
    string(4) "r1bc"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(4) "r1bc"
  }
}
dict(5) {
  ["haystack"]=>
  string(4) "abba"
  ["replacements"]=>
  dict(1) {
    ["a"]=>
    string(2) "r1"
  }
  ["C"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(6) "r1bbr1"
    ["replace_every_nonrecursive_l()"]=>
    string(6) "r1bbr1"
    ["replace_every_ci_l()"]=>
    string(6) "r1bbr1"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(6) "r1bbr1"
  }
  ["en_US.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(6) "r1bbr1"
    ["replace_every_nonrecursive_l()"]=>
    string(6) "r1bbr1"
    ["replace_every_ci_l()"]=>
    string(6) "r1bbr1"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(6) "r1bbr1"
  }
  ["tr_TR.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(6) "r1bbr1"
    ["replace_every_nonrecursive_l()"]=>
    string(6) "r1bbr1"
    ["replace_every_ci_l()"]=>
    string(6) "r1bbr1"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(6) "r1bbr1"
  }
}
dict(5) {
  ["haystack"]=>
  string(3) "abc"
  ["replacements"]=>
  dict(2) {
    ["a"]=>
    string(2) "r1"
    ["b"]=>
    string(2) "r2"
  }
  ["C"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(5) "r1r2c"
    ["replace_every_nonrecursive_l()"]=>
    string(5) "r1r2c"
    ["replace_every_ci_l()"]=>
    string(5) "r1r2c"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(5) "r1r2c"
  }
  ["en_US.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(5) "r1r2c"
    ["replace_every_nonrecursive_l()"]=>
    string(5) "r1r2c"
    ["replace_every_ci_l()"]=>
    string(5) "r1r2c"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(5) "r1r2c"
  }
  ["tr_TR.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(5) "r1r2c"
    ["replace_every_nonrecursive_l()"]=>
    string(5) "r1r2c"
    ["replace_every_ci_l()"]=>
    string(5) "r1r2c"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(5) "r1r2c"
  }
}
dict(5) {
  ["haystack"]=>
  string(3) "abc"
  ["replacements"]=>
  dict(2) {
    ["ab"]=>
    string(2) "r1"
    ["b"]=>
    string(2) "r2"
  }
  ["C"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "r1c"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "r1c"
    ["replace_every_ci_l()"]=>
    string(3) "r1c"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(3) "r1c"
  }
  ["en_US.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "r1c"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "r1c"
    ["replace_every_ci_l()"]=>
    string(3) "r1c"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(3) "r1c"
  }
  ["tr_TR.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "r1c"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "r1c"
    ["replace_every_ci_l()"]=>
    string(3) "r1c"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(3) "r1c"
  }
}
dict(5) {
  ["haystack"]=>
  string(3) "abc"
  ["replacements"]=>
  dict(2) {
    ["ab"]=>
    string(2) "r1"
    ["r1"]=>
    string(2) "r2"
  }
  ["C"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "r2c"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "r1c"
    ["replace_every_ci_l()"]=>
    string(3) "r2c"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(3) "r1c"
  }
  ["en_US.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "r2c"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "r1c"
    ["replace_every_ci_l()"]=>
    string(3) "r2c"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(3) "r1c"
  }
  ["tr_TR.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "r2c"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "r1c"
    ["replace_every_ci_l()"]=>
    string(3) "r2c"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(3) "r1c"
  }
}
dict(5) {
  ["haystack"]=>
  string(4) "abba"
  ["replacements"]=>
  dict(2) {
    ["a"]=>
    string(2) "r1"
    ["r1"]=>
    string(2) "r2"
  }
  ["C"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(6) "r2bbr2"
    ["replace_every_nonrecursive_l()"]=>
    string(6) "r1bbr1"
    ["replace_every_ci_l()"]=>
    string(6) "r2bbr2"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(6) "r1bbr1"
  }
  ["en_US.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(6) "r2bbr2"
    ["replace_every_nonrecursive_l()"]=>
    string(6) "r1bbr1"
    ["replace_every_ci_l()"]=>
    string(6) "r2bbr2"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(6) "r1bbr1"
  }
  ["tr_TR.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(6) "r2bbr2"
    ["replace_every_nonrecursive_l()"]=>
    string(6) "r1bbr1"
    ["replace_every_ci_l()"]=>
    string(6) "r2bbr2"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(6) "r1bbr1"
  }
}
dict(5) {
  ["haystack"]=>
  string(4) "abba"
  ["replacements"]=>
  dict(2) {
    ["a"]=>
    string(2) "R1"
    ["r1"]=>
    string(2) "r2"
  }
  ["C"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(6) "R1bbR1"
    ["replace_every_nonrecursive_l()"]=>
    string(6) "R1bbR1"
    ["replace_every_ci_l()"]=>
    string(6) "r2bbr2"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(6) "R1bbR1"
  }
  ["en_US.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(6) "R1bbR1"
    ["replace_every_nonrecursive_l()"]=>
    string(6) "R1bbR1"
    ["replace_every_ci_l()"]=>
    string(6) "r2bbr2"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(6) "R1bbR1"
  }
  ["tr_TR.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(6) "R1bbR1"
    ["replace_every_nonrecursive_l()"]=>
    string(6) "R1bbR1"
    ["replace_every_ci_l()"]=>
    string(6) "r2bbr2"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(6) "R1bbR1"
  }
}
dict(5) {
  ["haystack"]=>
  string(3) "aia"
  ["replacements"]=>
  dict(1) {
    ["I"]=>
    string(1) "r"
  }
  ["C"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "aia"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "aia"
    ["replace_every_ci_l()"]=>
    string(3) "ara"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(3) "ara"
  }
  ["en_US.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "aia"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "aia"
    ["replace_every_ci_l()"]=>
    string(3) "ara"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(3) "ara"
  }
  ["tr_TR.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "aia"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "aia"
    ["replace_every_ci_l()"]=>
    string(3) "aia"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(3) "aia"
  }
}
dict(5) {
  ["haystack"]=>
  string(3) "aia"
  ["replacements"]=>
  dict(1) {
    ["Ä°"]=>
    string(1) "r"
  }
  ["C"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "aia"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "aia"
    ["replace_every_ci_l()"]=>
    string(3) "aia"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(3) "aia"
  }
  ["en_US.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "aia"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "aia"
    ["replace_every_ci_l()"]=>
    string(3) "aia"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(3) "aia"
  }
  ["tr_TR.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "aia"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "aia"
    ["replace_every_ci_l()"]=>
    string(3) "ara"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(3) "ara"
  }
}
dict(5) {
  ["haystack"]=>
  string(3) "aia"
  ["replacements"]=>
  dict(2) {
    ["I"]=>
    string(2) "r1"
    ["r1"]=>
    string(2) "r2"
  }
  ["C"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "aia"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "aia"
    ["replace_every_ci_l()"]=>
    string(4) "ar2a"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(4) "ar1a"
  }
  ["en_US.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "aia"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "aia"
    ["replace_every_ci_l()"]=>
    string(4) "ar2a"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(4) "ar1a"
  }
  ["tr_TR.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "aia"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "aia"
    ["replace_every_ci_l()"]=>
    string(3) "aia"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(3) "aia"
  }
}
dict(5) {
  ["haystack"]=>
  string(3) "aia"
  ["replacements"]=>
  dict(2) {
    ["Ä°"]=>
    string(2) "r1"
    ["r1"]=>
    string(2) "r2"
  }
  ["C"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "aia"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "aia"
    ["replace_every_ci_l()"]=>
    string(3) "aia"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(3) "aia"
  }
  ["en_US.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "aia"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "aia"
    ["replace_every_ci_l()"]=>
    string(3) "aia"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(3) "aia"
  }
  ["tr_TR.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "aia"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "aia"
    ["replace_every_ci_l()"]=>
    string(4) "ar2a"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(4) "ar1a"
  }
}
dict(5) {
  ["haystack"]=>
  string(5) "ababa"
  ["replacements"]=>
  dict(2) {
    ["a"]=>
    string(1) "1"
    ["ab"]=>
    string(1) "2"
  }
  ["C"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(5) "1b1b1"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "221"
    ["replace_every_ci_l()"]=>
    string(5) "1b1b1"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(3) "221"
  }
  ["en_US.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(5) "1b1b1"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "221"
    ["replace_every_ci_l()"]=>
    string(5) "1b1b1"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(3) "221"
  }
  ["tr_TR.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(5) "1b1b1"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "221"
    ["replace_every_ci_l()"]=>
    string(5) "1b1b1"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(3) "221"
  }
}
dict(5) {
  ["haystack"]=>
  string(5) "ababa"
  ["replacements"]=>
  dict(2) {
    ["ab"]=>
    string(1) "1"
    ["a"]=>
    string(1) "2"
  }
  ["C"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "112"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "112"
    ["replace_every_ci_l()"]=>
    string(3) "112"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(3) "112"
  }
  ["en_US.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "112"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "112"
    ["replace_every_ci_l()"]=>
    string(3) "112"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(3) "112"
  }
  ["tr_TR.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(3) "112"
    ["replace_every_nonrecursive_l()"]=>
    string(3) "112"
    ["replace_every_ci_l()"]=>
    string(3) "112"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(3) "112"
  }
}
dict(5) {
  ["haystack"]=>
  string(14) "HI HELLO world"
  ["replacements"]=>
  dict(2) {
    ["hi"]=>
    string(5) "hello"
    ["hello"]=>
    string(2) "hi"
  }
  ["C"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(14) "HI HELLO world"
    ["replace_every_nonrecursive_l()"]=>
    string(14) "HI HELLO world"
    ["replace_every_ci_l()"]=>
    string(11) "hi hi world"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(14) "hello hi world"
  }
  ["en_US.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(14) "HI HELLO world"
    ["replace_every_nonrecursive_l()"]=>
    string(14) "HI HELLO world"
    ["replace_every_ci_l()"]=>
    string(11) "hi hi world"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(14) "hello hi world"
  }
  ["tr_TR.UTF-8"]=>
  dict(4) {
    ["replace_every_l()"]=>
    string(14) "HI HELLO world"
    ["replace_every_nonrecursive_l()"]=>
    string(14) "HI HELLO world"
    ["replace_every_ci_l()"]=>
    string(11) "HI hi world"
    ["replace_every_nonrecursive_ci_l()"]=>
    string(11) "HI hi world"
  }
}
--- Invalid inputs
--- C: abc => 123
- HH\Lib\_Private\_Str\replace_every_l
Keys and values passed to str_replace*() must be strings
- HH\Lib\_Private\_Str\replace_every_ci_l
Keys and values passed to str_replace*() must be strings
- HH\Lib\_Private\_Str\replace_every_nonrecursive_l
Keys and values passed to str_replace*() must be strings
- HH\Lib\_Private\_Str\replace_every_nonrecursive_ci_l
Keys and values passed to str_replace*() must be strings
--- UTF8: abc => 123
- HH\Lib\_Private\_Str\replace_every_l
Keys and values passed to str_replace*() must be strings
- HH\Lib\_Private\_Str\replace_every_ci_l
Keys and values passed to str_replace*() must be strings
- HH\Lib\_Private\_Str\replace_every_nonrecursive_l
Keys and values passed to str_replace*() must be strings
- HH\Lib\_Private\_Str\replace_every_nonrecursive_ci_l
Keys and values passed to str_replace*() must be strings
--- C: 123 => abc
- HH\Lib\_Private\_Str\replace_every_l
Keys and values passed to str_replace*() must be strings
- HH\Lib\_Private\_Str\replace_every_ci_l
Keys and values passed to str_replace*() must be strings
- HH\Lib\_Private\_Str\replace_every_nonrecursive_l
Keys and values passed to str_replace*() must be strings
- HH\Lib\_Private\_Str\replace_every_nonrecursive_ci_l
Keys and values passed to str_replace*() must be strings
--- UTF8: 123 => abc
- HH\Lib\_Private\_Str\replace_every_l
Keys and values passed to str_replace*() must be strings
- HH\Lib\_Private\_Str\replace_every_ci_l
Keys and values passed to str_replace*() must be strings
- HH\Lib\_Private\_Str\replace_every_nonrecursive_l
Keys and values passed to str_replace*() must be strings
- HH\Lib\_Private\_Str\replace_every_nonrecursive_ci_l
Keys and values passed to str_replace*() must be strings
--- C:  => abc
- HH\Lib\_Private\_Str\replace_every_l
Keys passed to str_replace*() must be non-empty strings
- HH\Lib\_Private\_Str\replace_every_ci_l
Keys passed to str_replace*() must be non-empty strings
- HH\Lib\_Private\_Str\replace_every_nonrecursive_l
Keys passed to str_replace*() must be non-empty strings
- HH\Lib\_Private\_Str\replace_every_nonrecursive_ci_l
Keys passed to str_replace*() must be non-empty strings
--- UTF8:  => abc
- HH\Lib\_Private\_Str\replace_every_l
Keys passed to str_replace*() must be non-empty strings
- HH\Lib\_Private\_Str\replace_every_ci_l
Keys passed to str_replace*() must be non-empty strings
- HH\Lib\_Private\_Str\replace_every_nonrecursive_l
Keys passed to str_replace*() must be non-empty strings
- HH\Lib\_Private\_Str\replace_every_nonrecursive_ci_l
Keys passed to str_replace*() must be non-empty strings
--- Similar pairs, e.g. due to normalization or capitalization
--- C: (abc, ABC)
- HH\Lib\_Private\_Str\replace_every_l
No exception.
- HH\Lib\_Private\_Str\replace_every_ci_l
No exception.
- HH\Lib\_Private\_Str\replace_every_nonrecursive_l
No exception.
- HH\Lib\_Private\_Str\replace_every_nonrecursive_ci_l
Duplicate replacement found after normalization
--- UTF8: (abc, ABC)
- HH\Lib\_Private\_Str\replace_every_l
No exception.
- HH\Lib\_Private\_Str\replace_every_ci_l
No exception.
- HH\Lib\_Private\_Str\replace_every_nonrecursive_l
No exception.
- HH\Lib\_Private\_Str\replace_every_nonrecursive_ci_l
Duplicate replacement found after normalization
--- C: (Ã©, eÌ)
- HH\Lib\_Private\_Str\replace_every_l
No exception.
- HH\Lib\_Private\_Str\replace_every_ci_l
No exception.
- HH\Lib\_Private\_Str\replace_every_nonrecursive_l
No exception.
- HH\Lib\_Private\_Str\replace_every_nonrecursive_ci_l
No exception.
--- UTF8: (Ã©, eÌ)
- HH\Lib\_Private\_Str\replace_every_l
No exception.
- HH\Lib\_Private\_Str\replace_every_ci_l
No exception.
- HH\Lib\_Private\_Str\replace_every_nonrecursive_l
Duplicate replacement found after normalization
- HH\Lib\_Private\_Str\replace_every_nonrecursive_ci_l
Duplicate replacement found after normalization
--- C: (Ã, eÌ)
- HH\Lib\_Private\_Str\replace_every_l
No exception.
- HH\Lib\_Private\_Str\replace_every_ci_l
No exception.
- HH\Lib\_Private\_Str\replace_every_nonrecursive_l
No exception.
- HH\Lib\_Private\_Str\replace_every_nonrecursive_ci_l
No exception.
--- UTF8: (Ã, eÌ)
- HH\Lib\_Private\_Str\replace_every_l
No exception.
- HH\Lib\_Private\_Str\replace_every_ci_l
No exception.
- HH\Lib\_Private\_Str\replace_every_nonrecursive_l
No exception.
- HH\Lib\_Private\_Str\replace_every_nonrecursive_ci_l
Duplicate replacement found after normalization
--- C: (Ã©, EÌ)
- HH\Lib\_Private\_Str\replace_every_l
No exception.
- HH\Lib\_Private\_Str\replace_every_ci_l
No exception.
- HH\Lib\_Private\_Str\replace_every_nonrecursive_l
No exception.
- HH\Lib\_Private\_Str\replace_every_nonrecursive_ci_l
No exception.
--- UTF8: (Ã©, EÌ)
- HH\Lib\_Private\_Str\replace_every_l
No exception.
- HH\Lib\_Private\_Str\replace_every_ci_l
No exception.
- HH\Lib\_Private\_Str\replace_every_nonrecursive_l
No exception.
- HH\Lib\_Private\_Str\replace_every_nonrecursive_ci_l
Duplicate replacement found after normalization
--- C: (Ã, Ã©)
- HH\Lib\_Private\_Str\replace_every_l
No exception.
- HH\Lib\_Private\_Str\replace_every_ci_l
No exception.
- HH\Lib\_Private\_Str\replace_every_nonrecursive_l
No exception.
- HH\Lib\_Private\_Str\replace_every_nonrecursive_ci_l
No exception.
--- UTF8: (Ã, Ã©)
- HH\Lib\_Private\_Str\replace_every_l
No exception.
- HH\Lib\_Private\_Str\replace_every_ci_l
No exception.
- HH\Lib\_Private\_Str\replace_every_nonrecursive_l
No exception.
- HH\Lib\_Private\_Str\replace_every_nonrecursive_ci_l
Duplicate replacement found after normalization
