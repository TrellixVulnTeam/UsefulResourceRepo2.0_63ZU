"use strict";
(function (g, d) {
  function q(a) {
    return encodeURIComponent(a).replace(/['()_*]/g, function (b) {
      return "%" + b.charCodeAt().toString(16);
    });
  }
  function z(a, b) {
    for (var e = a.length; e--; ) b(a[e]);
  }
  function A(a, b) {
    for (
      var e = a.charAt(0), c = "", k = 0, r = a.length, f, h, v = 0;
      k < r;

    ) {
      h = a.charAt(k++);
      f = h.charCodeAt();
      if (b && (32 > f || 126 < f)) {
        if (55296 == (f & 63488)) {
          v++;
          h = a.charCodeAt(k++);
          if (55296 != (f & 64512) || 56320 != (h & 64512))
            throw Error("UCS-2(decode): illegal sequence");
          f = ((f & 1023) << 10) + (h & 1023) + 65536;
        }
        f = "\\" + f.toString(16).toUpperCase() + " ";
      } else
        f = /[\t\n\v\f:]/.test(h)
          ? "\\" + f.toString(16).toUpperCase() + " "
          : /[ !"#$%&'()*+,./;<=>?@\[\\\]^`{|}~]/.test(h)
          ? "\\" + h
          : h;
      c += f;
    }
    /^_/.test(c) && (c = "\\_" + c.slice(1));
    /^-[\d]/.test(c) && (c = "\\-" + c.slice(1));
    /\d/.test(e) && (c = "\\3" + e + " " + c.slice(1));
    return { surrogatePairCount: v, output: c };
  }
  function w(a) {
    return a.replace(/['\n\u2028\u2029\\]/g, function (b) {
      return B[b];
    });
  }
  function l(a, b) {
    if (null == b) return a.innerText || a.textContent;
    null != a.innerText && (a.innerText = b);
    null != a.textContent && (a.textContent = b);
  }
  function t(a) {
    var b = l(m).replace(/\r\n?/g, "\n");
    if (b) {
      x.className = y.className = "";
      var e = A(b, n.checked);
      a = "#" + e.output;
      e = e.surrogatePairCount;
      var c = w(a.replace(/^#\\_/, "#_"));
      var k = (n.checked ? jsesc(b) : w(b)).replace(/<\/script/g, "<\\/script");
    } else
      (x.className = y.className = "show"),
        (c = a = '[id=""]'),
        (k = ""),
        (e = 0);
    var r = "#" + +n.checked + q(b);
    C.className = /\s/.test(b) ? "show" : "";
    D.className = e ? "show" : "";
    z(E, function (f) {
      l(f, ~b.indexOf('"') ? "'" : '"');
    });
    l(F, a);
    l(G, c);
    l(H, k);
    I.href = r;
    p && (p.cssEscapes = b);
    J.href =
      "data:text/html;charset=utf-8," +
      encodeURIComponent(
        "<!DOCTYPE html><title>Mothereffing CSS escapes example</title><style>pre{background:#eee;padding:.5em}.test{display:none}" +
          a +
          '{display:block}.pass{background:lime}.fail{background:red}</style><h1><a href="https://mothereff.in/css-escapes' +
          r +
          '">Mothereffing CSS escapes</a> example</h1><pre><code>' +
          b.replace(/</g, "&lt;") +
          '</code></pre><p id="' +
          b.replace(/"/g, "&quot;") +
          '" class=test>If you can read this, the escaped CSS selector worked. </p>' +
          (e
            ? "<p>Standard CSS character escape sequences for supplementary Unicode characters aren\u2019t supported in older versions of WebKit. <strong>This test case will fail in those browsers.</strong> It\u2019s better to leave these characters unescaped.</p>"
            : "") +
          "<script>var el=document.getElementsByTagName('p')[0];try{document.getElementById('" +
          k +
          "').innerHTML += ' <code>document.getElementById</code> worked.';document.querySelector('" +
          c +
          "').innerHTML+=' <code>document.querySelector</code> worked.';el.className='pass'}catch(e){el.innerHTML='FAIL';el.className='fail'}\x3c/script>"
      );
  }
  var m = d.getElementsByTagName("div")[0],
    n = d.getElementsByTagName("input")[0],
    E = d.getElementsByTagName("b"),
    u = d.getElementsByTagName("mark"),
    F = u[0],
    H = u[1],
    G = u[2],
    x = d.getElementById("empty"),
    y = d.getElementById("empty-comment"),
    I = d.getElementById("permalink"),
    J = d.getElementById("example"),
    C = d.getElementById("whitespace"),
    D = d.getElementById("supplementary-characters"),
    B = {
      "\b": "\\b",
      "\t": "\\t",
      "\n": "\\n",
      "\x0B": "\\x0B",
      "\f": "\\f",
      "\r": "\\r",
      '"': '\\"',
      "\u2028": "\\u2028",
      "\u2029": "\\u2029",
      "'": "\\'",
      "\\": "\\\\",
    },
    p = (function () {
      var a = new Date(),
        b;
      try {
        (b = g.localStorage).setItem(a, a);
        var e = b.getItem(a) == a;
        b.removeItem(a);
        return e && b;
      } catch (c) {}
    })();
  m.onkeyup = n.onchange = t;
  m.oninput = function () {
    this.onkeyup = null;
    t();
  };
  m.onpaste = function (a) {
    a.preventDefault();
    a = a.clipboardData.getData("text/plain").trim();
    d.execCommand("insertText", !1, a);
  };
  p && p.cssEscapes && (l(m, p.cssEscapes), t());
  g.onhashchange = function () {
    "1" == location.hash.charAt(1) && (n.checked = !0);
    l(m, decodeURIComponent(location.hash.slice(2)));
  };
  location.hash && (g.onhashchange(), t());
  m.focus();
})(this, document);
window._gaq = [["_setAccount", "UA-6065217-60"], ["_trackPageview"]];
(function (g, d) {
  var q = g.createElement(d);
  g = g.getElementsByTagName(d)[0];
  q.src = "https://www.google-analytics.com/ga.js";
  g.parentNode.insertBefore(q, g);
})(document, "script");
