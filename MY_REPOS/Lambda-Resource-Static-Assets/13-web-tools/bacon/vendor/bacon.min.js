/*
 https://lambda-w-1-notes.netlify.app/13-web-tools/bacon v0.1.0 by @bgoonz | MIT license */
"use strict";
(function (p) {
  const l = "object" == typeof exports && exports;
  const q =
    "object" == typeof module && module && module.exports == l && module;
  const k = "object" == typeof global && global;
  if (k.global === k || k.window === k) p = k;
  const h = {
    encode: function (b, a) {
      b = b.toUpperCase();
      a && null != a.alphabet
        ? (a = a.alphabet.toUpperCase())
        : ((a = "ABCDEFGHIKLMNOPQRSTUWXYZ"),
          (b = b.replace(/J/g, "I").replace(/V/g, "U")));
      for (var f = -1, m = b.length, c, e = "", d = ""; ++f < m; )
        (c = a.indexOf(b.charAt(f))),
          -1 < c
            ? ((d +=
                e +
                ((c & 16 ? "B" : "A") +
                  (c & 8 ? "B" : "A") +
                  (c & 4 ? "B" : "A") +
                  (c & 2 ? "B" : "A") +
                  (c & 1 ? "B" : "A"))),
              (e = ""))
            : f && (e = " ");
      return d;
    },
    decode: function (b, a) {
      b = b.toUpperCase();
      a =
        a && null != a.alphabet
          ? a.alphabet.toUpperCase()
          : "ABCDEFGHIKLMNOPQRSTUWXYZ";
      for (var f = -1, m = b.length, c = "", e = "", d = [], g; ++f < m; )
        (g = b.charAt(f)),
          "A" == g || "B" == g ? d.push(g) : (c = " "),
          5 == d.length &&
            ((g =
              ("A" == d[0] ? 0 : 16) +
              ("A" == d[1] ? 0 : 8) +
              ("A" == d[2] ? 0 : 4) +
              ("A" == d[3] ? 0 : 2) +
              ("A" == d[4] ? 0 : 1)),
            (d = []),
            (e += (e.length ? c : "") + a.charAt(g)),
            (c = ""));
      return e;
    },
    version: "0.1.0",
  };
  if (
    "function" == typeof define &&
    "object" == typeof define.amd &&
    define.amd
  )
    define(function () {
      return h;
    });
  else if (l && !l.nodeType)
    if (q) q.exports = h;
    else for (const n in h) h.hasOwnProperty(n) && (l[n] = h[n]);
  else p.bacon = h;
})(this);
